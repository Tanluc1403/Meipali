/* Reset mặc định của Browser */
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body{
    font-family: 'Oswald', sans-serif;
}
.container{
    width: 75%;
    margin: auto;
}
.title{
    text-align: center;
}
.title p{
    font-size: 14px;
    color: #888888;
}
.title p:last-of-type{
    font-size: 16px;
    font-weight: bold;
}
.title h2{
    font-size: 50px;
}


/* HEADER  */

/* xoá gạch chân của logo và thẻ a  */
header a{
    text-decoration: none;
    color: white;
}
header{

    /* position: absolute  làm mất kích thước thẻ
    đặt thẻ logo nằm trên thẻ carosel */
    position: absolute; 
    top:0;
    left:0;
    
    /* xét lại chiều cao do position làm mất  */
    width: 100%;

    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
}
header nav li{
    display: inline;
    list-style: none;
    margin: 0 10px;
}

/* viết hoa tất cả chữ cái  */
header li a{
    text-transform: uppercase;
    font-size: 16px;
}
.header__logo{
    font-size: 32px;
}

.header__content{
    padding: 30px 0;
/* 1_2_3 đi chung */
    /* 1 khai báo flex với thẻ cha trực tiếp với các thẻ con cần sắp xếp lên 1 hàng */
    display: flex;

    /* 2 căn theo chiều ngang, thẻ cha flex còn vùng trống( hết vùng trống dùng padding thêm khoản cách) */
    justify-content: space-between;

    /* 3 căn theo chiều dọc (trên/dưới/giữa), chỉnh khi nội dung khác kích thước */
    align-items: center;
}

/* CAROSEL  */
.carosel{
    background-image: url(../img/home_slider.jpg);
    background-position: center;
    background-size: cover;
    height: 600px;

    text-align: center;

/* căn giữa với flex(1 hàng, giữa ngang, giữa dọc - 1 thẻ con trực tiếp) */
    display: flex;
    justify-content: center;
    align-items: center;
}

/* mũi tên chạy xuống liên tục  */
.carosel__icon i{
    font-size: 60px;
    color: rgb(27, 21, 112);
    /* animate , keyfarm ở dưới cùng của css*/
    animation: upDown 1s linear 0s infinite ;
}



/* SERVICES  */
.services{
    background-color: black;
    padding: 100px 0;
}
.title--color{
    color:white;
}

.title--color p:first-of-type{
    color: #e62b4a;
}
.multiple-items{
    color: white;
    
    margin-top: 30px;
}
.services .multiple-items .services__item{
    background-color: white;
    color: #888888 ;
}
/* class name:10
   id        :100
   tag name  :1
   độ ưu tiên của css đè code */
   /* thêm thẻ cha để đè code thư viện (bằng điểm thì code sau ưu tiên hơn) */
.multiple-items .services__item{
    width: 214px;
    height: 230px;
    background: pink;
    margin: 0 10px;
    
    /* căn giữa của flex (nhiều con) */
    display: flex; 
    justify-content: center;
    align-items: center;
    flex-direction: column;    /*sắp theo chiều dọc (do flex đã kéo icon ngang text*/
    position:relative
}

/* hover  */
.services__item::before{
    content: "";                /*bắt buộc*/
    width: 5px;
    /* trước hover  */
    /* do hiệu ứng chạy từ trên xuống, nên ko dùng opacity(ẩn hiện) mà sẽ dùng height= 0; */
    height: 0;
    background-color: red;
    position: absolute;
    right: 0;
    top: 0;
    transition: .5s;
}
/* sau hover  */
.services__item:hover::before{
    height: 100%;
}
 /* xem class trong depvertune */


/* đổi màu nút  */
/* xem trong depvelopvertune class màu của nút  */
.slick-dots li button:before{
/* xem bộ selector bao nhiêu điểm  */
}
/* gọi ID để điểm ưu tiên cao hơn, đề màu nút , SỬA CODE RIÊNG PHẦN SERVICES */
#servicesID .slick-dots li button:before{
    color: white;
    font-size: 14px;
}

/* đè code khi click (cps class slick-active ) */
#servicesID .slick-dots .slick-active button:before{
    color: red;

}

/* BLOG  */
.blogs{
    padding: 100px 0;
}
.blogs__content{
  display: grid;  
  /* khai báo cột (số cột cần tạoa, kích thước cột) */
  /* grid-template-columns: 25% 25% 25% 25% ;  cột bằng nhau*/
  /* fr: mỗi cột có kích thước 1/4 */
    grid-template-columns: repeat(4, 1fr); 

    /* thêm khoảng cách giữa các thẻ con của grid  */
    gap: 40px;

  /* khai báo hàng 
  +nếu kích thước các hàng bằng nhau (thì ko cần khai báo)
  +chỉ khai báo khi kích thước mỗi hàng khác nhau*/
  /* grid-template-rows: ; */
}
.blogs__item1{
    /* gom hàng */
    /* grid-column: 1 / 3 ;     line bắt đầu / line kết thúc*/
    grid-column: 1 / span 2;  /*bắt đầu line 1, chiếm 2 cột */

    /* gom cột  */
    grid-row: 1 / span 2;
}

.blog__item10{
    grid-column: 3 / span 2;
    grid-row: 3 / span 2;
}
/* bị dãn ảnh 1
C1: cũ=> bg-image
bg-size:cover
ko hỗ trợ cho SEO 
*/
.blogs__item img{
    width: 100%;
    height: 100%;

    /* C2:CSS object_fit: cover; */
    object-fit: cover;

    /* cho ảnh xám và độ sáng tối (tương phản) */
    filter: grayscale(50%) contrast(50%);
}

/* tạo hiệu ứng hover  */
.blogs__item{
    position: relative;   /* tạo nền để icon đè lên*/

    overflow: hidden; /*phần text bị tràn nên dùng để ẩn phần tràn */
    /* opacity: vẫn che được, nhưng chỉ che phần hiển thị chứ ko che được rê chuộc ; */
}

/* trước hover  */
.blogs_overlay{
    position: absolute;    /* icon nằm đè lên hình*/
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(230, 46, 77, 0.6);

    /* làm ẩn .overlay trước hover  */
    opacity: 0;
}
/* sau hover  */
.blogs_overlay:hover{
    opacity: 1;
}
.blogs__text{
    position: absolute;
    left: 20px;
    bottom: 20px;
}
/* trước hover  */
.blogs__zoom{
    position: absolute;
    top: 20px;
    right: 20px;
    transform: translateY(50px);

    /* transition: đặt trước hover; */
    transition:  0.5s;
}
/* cha được nhận chuộc (hover) => thẻ con thay đổi  */
.blogs__item:hover .blogs__zoom{
    /* sau hover */
    transform: translateY(0);
}

.blogs__text{
    transform: translateY(50px);
    transition:  0.5s;
}

.blogs__item:hover .blogs__text{
    transform: translateY(0);
}
/* NUMBER  */
.number{
    padding: 100px 0 ;
    background-color: black;
    color: white;
    text-align: center;
}
.flex{
    display: flex;
    justify-content:space-around;
}
.number p:first-of-type{
    font-size: 60px;
    font-weight: 300;
}
.number p:last-of-type{
    font-size: 20px;
    color: #888888;
}
.number__item{
    /* ngưng rung khi chạy số  */
    width: 25%;
}
/* EXP  */
.exp__content video{
    width: 100%;
}
.exp iframe{
    width: 100%;
    height: 500px;
    border: 3px solid #e62b4a;
}
.exp{
    padding: 70px 0;
    background-image: url(../img/bussiness_img_1.jpg);
    background-size: cover;

    /* thuộc tính CSS3 - xem hỗ trợ trước  */
    background-attachment:fixed;
}
/* CONTACT  */
.contact{
    padding: 100px 0;
}
.contact__content{
    display: flex;
    gap: 20px;    /* tạo khoản cách giữa map và form*/
}
.contact__map{
    width: 60%;
}
.contact__map iframe{
    width: 100%; 
}
.contact__form{
    width: 40%;
    
}
.contact__form form{
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
}

/* rút gọn selector */
.contact__form input, .contact__form textarea, .contact__form button{
    padding: 15px;
}
.contact__form button{
    background-color: black;
    color: white;
    padding: 30px;
    font-size: 25px;
    text-transform: uppercase;
    transition: all .5s;
}
.contact__form button:hover{
    background-color: rgb(204, 65, 65);
}

/* back to top  */
.back-to-top{
    /* đi theo thẻ body nên ko cần relative cho thẻ cha  */
    position: fixed;

    width: 80px;
    height: 80px;
    border: 1px solid bisque;
    background-color: bisque;
    right: 50px;
    bottom:  50px;
    font-size: 40px;
    line-height: 80px;
    text-align: center;
    
    /* ẩn nút để thư viện cho hiện ra  */
    opacity: 0;
}

/* hiển thị nút (để dưới cùng) */
.cd-visibletop--is- { 
    
    opacity: 1;
  }






  /* keyframe (mẫu chuyển động)(mũi tên trong carosell) (đặt cuối cùng)(đặt tên updown ko trùng)*/
  /* có 2 cách: from..to và 0% .. 100% */
  @keyframes upDown{
    /* khai báo chuyển động 1 chu kì */
    /* from{
        transform: translateY(0);
        opacity: 0;
    }
    to{
        transform: translateY(100px);
        opacity: 1;

    } */

    0%{
        transform: translateY(0);
        opacity: 0;
    }
    50%{
        transform: translateY(50%) rotate(180deg)/*quay 1 vòng*/
        ;
    }
    100%{
        transform: translateY(200px) rotate(360deg);
        opacity: 1;

    }

  }